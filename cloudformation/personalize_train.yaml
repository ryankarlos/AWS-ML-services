Parameters:
  DatasetType:
    Default: Interactions
    Description: "Type of dataset resource to create in personalize"
    Type: "String"
  Bucket:
    Default: recommendation-sample-data
    Description: "S3 bucket for personalize project"
    Type: "String"
  LambdaKey:
    Default: movie-lens/lambda/trigger_glue_personalize.zip
    Description: "Key to lambda sfn trigger zip object"
    Type: "String"
  SFDefKey:
    Default: movie-lens/personalize-definition.json
    Description: "step function definition file S3 key"
    Type: "String"
  S3InputPrefix:
    Default: "movie-lens/raw_data/input"
    Description: "Key Prefix to ratings and movie csv objects in bucket"
    Type: "String"
  S3OutputPrefix:
    Default: "movie-lens/transformed"
    Description: "Key Prefix to glue outputs"
    Type: "String"
  RecipeArn:
    Default: "arn:aws:personalize:::recipe/aws-user-personalization"
    Description: "Recipe for training solution in Personalize"
    Type: "String"
  RepartionNumber:
    Default: 100
    Description: "The number of partitions to split the larger ratings csv dataset into when processing in glue pyspark"
    Type: "Number"
  RatingsResampleFraction:
    Default: 0.05
    Description: "Fraction of ratings csv to keep after resampling. The default results in 1 million rows approximately"
    Type: "String"
  DatasetImportInputS3Path:
    Default: "s3://recommendation-sample-data/movie-lens/transformed/model_input/interactions.csv"
    Description: "S3 path for interactions data for importing into personalize dataset with import job"
    Type: "String"
  SolutionArn:
    Default: "NONE"
    Description: "Pass arn if need to create solution version in existing solution resource. Defaults to 'NONE' which 
    will create a new solution before creating solution version"
    Type: "String"
  SolutionName:
    Default: "MoviesModel"
    Description: "If SolutionArn not specified, creates new solution with this name."
    Type: "String"
Resources:
    PersonalizeDataset:
        Type: AWS::Personalize::Dataset
        Properties:
          DatasetGroupArn: !GetAtt [PersonalizeDatasetGroup, DatasetGroupArn]
          DatasetType: !Ref DatasetType
          Name: Recommend
          SchemaArn: !GetAtt [PersonalizeSchema, SchemaArn]
    PersonalizeDatasetGroup:
        Type: AWS::Personalize::DatasetGroup
        Properties:
          Name: MoviesRecommendGroup
    PersonalizeSchema:
        Type: AWS::Personalize::Schema
        Properties:
          Name: RecommendSchema
          Schema: |
            {
              "type": "record",
              "name": "Interactions",
              "namespace": "com.amazonaws.personalize.schema",
              "fields": [
                  {
                      "name": "USER_ID",
                      "type": "string"
                  },
                  {
                      "name": "ITEM_ID",
                      "type": "string"
                  },
                  {
                      "name": "TIMESTAMP",
                      "type": "long"
                  }
              ],
              "version": "1.0"
            }
    PersonalizeRole:
      Type: 'AWS::IAM::Role'
      Properties:
        RoleName: "PersonalizeRole"
        AssumeRolePolicyDocument:
          Version: 2012-10-17
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - personalize.amazonaws.com
              Action:
                - 'sts:AssumeRole'
        Path: /
        "ManagedPolicyArns": [ "arn:aws:iam::aws:policy/AmazonS3FullAccess",
                               "arn:aws:iam::aws:policy/CloudWatchLogsFullAccess" ,
                                "arn:aws:iam::aws:policy/service-role/AmazonPersonalizeFullAccess"]
    GlueJob:
      Type: AWS::Glue::Job
      Properties:
        Command:
          Name: glueetl
          PythonVersion: "3"
          ScriptLocation: !Sub "s3://aws-glue-assets-${AWS::AccountId}-${AWS::Region}/scripts/Personalize_Glue_Script.py"
        DefaultArguments:
          "--enable-continuous-cloudwatch-log": "true"
          "--enable-glue-datacatalog": "true"
          "--enable-job-insights": "true"
          "--enable-metrics": "true"
          "--job-bookmark-option": "job-bookmark-disable"
          "--job-language": "python"
          "--bucket": !Ref Bucket
          "--s3_input_path": !Sub "s3://${Bucket}/${S3InputPrefix}"
          "--s3_output_prefix": !Ref  S3OutputPrefix
          "--rating_repartition_number": !Ref RepartionNumber
          "--ratings_resample_fraction": !Ref RatingsResampleFraction
        ExecutionProperty:
          MaxConcurrentRuns: 2
        MaxRetries: 0
        GlueVersion: 3.0
        WorkerType: Standard
        NumberOfWorkers: 4
        Timeout: 15
        Name: Recommendation-movies-transform
        Role: !ImportValue RoleGlue-Arn
    StepFunctionRole:
      Type: AWS::IAM::Role
      Properties:
        AssumeRolePolicyDocument:
          Version: '2008-10-17'
          Statement:
            - Sid: ''
              Effect: Allow
              Principal:
                Service: states.amazonaws.com
              Action: sts:AssumeRole
        RoleName: StepFunctionGluePersonalize
        ManagedPolicyArns:
          - arn:aws:iam::aws:policy/AmazonS3FullAccess
          - arn:aws:iam::aws:policy/AWSGlueConsoleFullAccess
          - arn:aws:iam::aws:policy/service-role/AmazonPersonalizeFullAccess
          - arn:aws:iam::aws:policy/CloudWatchFullAccess
          - arn:aws:iam::aws:policy/AWSXrayFullAccess
    StateMachine:
      Type: AWS::StepFunctions::StateMachine
      Properties:
        StateMachineName: GlueETLPersonalizeTraining
        DefinitionS3Location:
          Bucket: !Ref Bucket
          Key: !Ref SFDefKey
        LoggingConfiguration:
          Destinations:
            - CloudWatchLogsLogGroup:
                LogGroupArn: !GetAtt [LogGroup,Arn]
          IncludeExecutionData: true
          Level: ERROR
        TracingConfiguration:
          Enabled: true
        RoleArn: !GetAtt [StepFunctionRole, "Arn"]
    LogGroup:
      Type: AWS::Logs::LogGroup
      Properties:
        LogGroupName: !Sub "/aws/vendedlogs/states/GlueETLPersonalizeTraining-Logs"
        RetentionInDays: 7
    LambdaSFNTrigger:
      Type: AWS::Lambda::Function
      Properties:
        FunctionName: LambdaSFNTrigger
        Handler: lambda_function.lambda_handler
        Role:
          Fn::GetAtt: [LambdaRole , "Arn" ]
        Code:
          S3Bucket: !Ref Bucket
          S3Key: !Ref LambdaKey
        Runtime: python3.9
        Timeout: 60
        MemorySize: 500
        TracingConfig:
          Mode: Active
        Environment:
          Variables:
            SFN_NAME:
              Fn::GetAtt: [StateMachine, Name]
            S3_INPUT: !Ref DatasetImportInputS3Path
            SOLUTION_ARN: !Ref SolutionArn
            SOLUTION_NAME: !Ref SolutionName
            DATASET_GROUP_ARN:
              Fn::GetAtt: [PersonalizeDatasetGroup, DatasetGroupArn]
            DATASET_ARN:
              Fn::GetAtt: [PersonalizeDataset, DatasetArn]
            ROLE_ARN:
              Fn::GetAtt: [PersonalizeRole , Arn]
            RECIPE_ARN: !Ref RecipeArn
    LambdaRole:
      Type: 'AWS::IAM::Role'
      Properties:
        RoleName: "LambdaSFNTriggerRole"
        AssumeRolePolicyDocument:
          Version: 2012-10-17
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com
              Action:
                - 'sts:AssumeRole'
        Path: /
        "ManagedPolicyArns": [ "arn:aws:iam::aws:policy/CloudWatchLogsFullAccess" ,
                               "arn:aws:iam::aws:policy/AWSStepFunctionsFullAccess",
                               "arn:aws:iam::aws:policy/AWSXrayFullAccess"]
