{
  "Comment": "A description of my state machine",
  "StartAt": "Glue StartJobRun",
  "States": {
    "Glue StartJobRun": {
      "Type": "Task",
      "Resource": "arn:aws:states:::glue:startJobRun",
      "Parameters": {
        "JobName": "Recommendation-movies-transform",
        "MaxCapacity": 4
      },
      "Next": "Wait",
      "ResultPath": "$.Results",
      "ResultSelector": {
        "Id.$": "$.JobRunId"
      }
    },
    "Wait": {
      "Type": "Wait",
      "Seconds": 30,
      "Next": "PollGlueJobStatus"
    },
    "PollGlueJobStatus": {
      "Type": "Task",
      "Parameters": {
        "JobName": "Recommendation-movies-transform",
        "RunId.$": "$.Results.Id"
      },
      "Resource": "arn:aws:states:::aws-sdk:glue:getJobRun",
      "Next": "Check Glue Job Status Succeeded",
      "ResultPath": "$.Results",
      "ResultSelector": {
        "Id.$": "$.JobRun.Id",
        "JobRunState.$": "$.JobRun.JobRunState"
      }
    },
    "Check Glue Job Status Succeeded": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.Results.JobRunState",
          "StringEquals": "SUCCEEDED",
          "Next": "CreateDatasetImportJob"
        }
      ],
      "Default": "Wait"
    },
    "CreateDatasetImportJob": {
      "Type": "Task",
      "Parameters": {
        "DataSource": {
          "DataLocation.$": "$.S3input"
        },
        "DatasetArn.$": "$.DatasetArn",
        "JobName": "MoviesImportJob",
        "RoleArn.$": "$.RoleArn"
      },
      "Resource": "arn:aws:states:::aws-sdk:personalize:createDatasetImportJob",
      "Next": "Wait before polling Import Job",
      "ResultPath": "$.Results"
    },
    "Wait before polling Import Job": {
      "Type": "Wait",
      "Seconds": 45,
      "Next": "PollDatasetImportJobStatus"
    },
    "PollDatasetImportJobStatus": {
      "Type": "Task",
      "Parameters": {
        "DatasetImportJobArn.$": "$.Results.DatasetImportJobArn"
      },
      "Resource": "arn:aws:states:::aws-sdk:personalize:describeDatasetImportJob",
      "Next": "Check Import Job Status Succeeded",
      "ResultSelector": {
        "Status.$": "$.DatasetImportJob.Status",
        "DatasetImportJobArn.$": "$.DatasetImportJob.DatasetImportJobArn"
      },
      "ResultPath": "$.Results"
    },
    "Check Import Job Status Succeeded": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.Results.Status",
          "StringEquals": "ACTIVE",
          "Next": "CreateSolutionChoice"
        }
      ],
      "Default": "Wait before polling Import Job"
    },
    "CreateSolutionChoice": {
      "Type": "Choice",
      "Choices": [
        {
          "Not": {
            "Variable": "$.SolutionArn",
            "StringEquals": "NONE"
          },
          "Next": "CreateVersioninExistingSolution"
        }
      ],
      "Default": "CreateSolution"
    },
    "CreateSolution": {
      "Type": "Task",
      "Parameters": {
        "DatasetGroupArn.$": "$.DatasetGroupArn",
        "Name.$": "$.SolutionName",
        "RecipeArn.$": "$.RecipeArn",
        "PerformHPO": "true"
      },
      "Resource": "arn:aws:states:::aws-sdk:personalize:createSolution",
      "ResultPath": "$.Results",
      "Next": "CreateVersioninNewSolution"
    },
    "CreateVersioninNewSolution": {
      "Type": "Task",
      "End": true,
      "Parameters": {
        "SolutionArn.$": "$.Results.SolutionArn"
      },
      "Resource": "arn:aws:states:::aws-sdk:personalize:createSolutionVersion"
    },
    "CreateVersioninExistingSolution": {
      "Type": "Task",
      "Parameters": {
        "SolutionArn.$": "$.SolutionArn"
      },
      "Resource": "arn:aws:states:::aws-sdk:personalize:createSolutionVersion",
      "End": true
    }
  }
}